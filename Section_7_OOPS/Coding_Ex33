//QUESTION

// Point Class and Distance Calculation

// You have to represent a point in 2D space. Write a class with the name Point. The class needs two fields (instance variables) with name x and y of type int.

// The class needs to have two constructors. The first constructor does not have any parameters (no-arg constructor). The second constructor has parameters x and y of type int and it needs to initialize the fields.

// Write the following methods (instance methods):

// Method named getX without any parameters, it needs to return the value of x field.

// Method named getY without any parameters, it needs to return the value of y field.

// Method named setX with one parameter of type int, it needs to set the value of the x field.

// Method named setY with one parameter of type int, it needs to set the value of the y field.

// Method named distance without any parameters, it needs to return the distance between this Point and Point (0, 0) as a double.

// Method named distance with parameter of type Point, it needs to return the distance between this Point and the parameter Point as a double.

// Method named distance with two parameters x, y both of type int, it needs to return the distance between this Point and Point x, y as a double.



// How to find the distance between two points?
// To find a distance between points A(xA,yA) and B(xB,yB), we use the formula:

// d(A,B)=√ (xB − xA) * (xB - xA) + (yB − yA) * (yB - yA)

// Where √ represents square root.


public class Point {
   private int x;
    private int y;
 
    public Point() {}
 
    public Point(int x, int y) {
        this.x = x;
        this.y = y;
    }
 
    public int getX() {
        return x;
    }
 
    public void setX(int x) {
        this.x = x;
    }
 
    public int getY() {
        return y;
    }
 
    public void setY(int y) {
        this.y = y;
    }
 
    public double distance() {
        return distance(0, 0);
    }
 
    public double distance(Point a) {
        return distance(a.x, a.y);
    }
 
    public double distance(int x, int y) {
        
        int xDiff = this.x - x;
        int yDiff = this.y - y;
        return Math.sqrt(xDiff * xDiff + yDiff * yDiff);
    }
}
// Example usage:

// The following code demonstrates how to use the Point class and its methods to calculate distances between points.



public class Coding_Ex33 {
    public static void main(String[] args){
        Point first = new Point(10, 5);
        Point second = new Point(2, 4);
        System.out.println("distance(0,0)= " + first.distance());
        System.out.println("distance(second)= " + first.distance(second));
        System.out.println("distance(2,4)= " + first.distance(2, 4));
        Point point = new Point();
        System.out.println("distance()= " + point.distance());
    }
}

// Output:
// distance(0,0)= 11.180339887498949
// distance(second)= 8.246211251235321
// distance(2,4)= 8.246211251235321
// distance()= 0.0  
